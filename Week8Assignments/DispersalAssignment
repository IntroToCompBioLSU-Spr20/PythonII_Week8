Last login: Sun Mar 29 15:26:46 on ttys000
You have new mail.
(base) Kynnedis-MacBook-Air:~ kynnedisonnier$ ls
Applications		Library			PythonIII_Week9
Creative Cloud Files	MacKeeper Backups	PythonII_Week8
Desktop			Movies			Standard Notes Backups
Documents		Music			med scribe.txt
Downloads		Pictures		partnerDNA.sh
IntroPython_Week7	Public
(base) Kynnedis-MacBook-Air:~ kynnedisonnier$ cd PythonII_Week8/
(base) Kynnedis-MacBook-Air:PythonII_Week8 kynnedisonnier$ ls
Dispersal_assignment.ipynb	README.md
ExampleJupyterNotebook.ipynb	Week8Assignments
(base) Kynnedis-MacBook-Air:PythonII_Week8 kynnedisonnier$ cd ..
(base) Kynnedis-MacBook-Air:~ kynnedisonnier$ cd PythonIII_Week9
(base) Kynnedis-MacBook-Air:PythonIII_Week9 kynnedisonnier$ ls
DispersalWeek9_Sonnier.ipynb		Week9_Practice.ipynb
README.md				Week9_Self.ipynb
SimulateDNAEvolution.ipynb		coronaData.txt
SimulateDNAEvolution_Sonnier.ipynb	untitled.txt
Week9Assignments
(base) Kynnedis-MacBook-Air:PythonIII_Week9 kynnedisonnier$ cd ..
(base) Kynnedis-MacBook-Air:~ kynnedisonnier$ cd PythonII_Week8/
(base) Kynnedis-MacBook-Air:PythonII_Week8 kynnedisonnier$ ls
Dispersal_assignment.ipynb	README.md
ExampleJupyterNotebook.ipynb	Week8Assignments
(base) Kynnedis-MacBook-Air:PythonII_Week8 kynnedisonnier$ nano Dispersal_assignment.ipynb 






























  GNU nano 2.0.6                File: Dispersal_assignment.ipynb                            Modified  

    "\n",
    "    absMax = 0\n",
    "    for pos in posLog:\n",
    "        if abs(pos[0]) > absMax:\n",
    "            absMax = abs(pos[0])\n",
    "        if abs(pos[1]) > absMax:\n",
    "            absMax = abs(pos[1])\n",
    "    size = (absMax * 2) + 1\n",
    "\n",
    "    for _ in range(size):\n",
    "        map.append([])\n",
    "\n",
    "    for row in map:\n",
    "        for i in range(size):\n",
    "            row.append(\"-\")\n",
    "\n",
    "    for pos in posLog:\n",
    "        map[-1*(pos[1]+absMax+1)][pos[0]+absMax] = \"*\"\n",
    "\n",
    "    for row in map:\n",
    "        rStr = \"\"\n",
    "        for c in row:\n",
    "            rStr += str(c)\n",
    "        print(rStr)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now let's draw a map! We'll execute our new function and pass it the position log as an argument$
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "drawMap(posLog)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In these maps, the dashes (`-`) represent the entire landscape background, and the asterisks (`*$
    "\n",
    "Now, look at the last position of the individual (i.e., the last entry in `posLog` - hint, try `$
   ]
  },
  {

